IDC-Chatbot/
â”‚
â”œâ”€â”€ backend/                         # All backend logic and processing lives here
â”‚   â”œâ”€â”€ main.py                     # Main entrypoint, orchestrates the chatbot
â”‚   â”œâ”€â”€ config.py                   # Central configuration values (paths, model names, API keys)
â”‚
â”‚   â”œâ”€â”€ data_loader/                # Module: Raw document ingestion and extraction
â”‚   â”‚   â””â”€â”€ __init__.py
â”‚   â”‚   â””â”€â”€ loader.py              # Loads PDFs, PPTX, CSV, TXT, images; handles OCR and splitting logic
â”‚
â”‚   â”œâ”€â”€ text_processor/             # Module: Chunking and cleaning of extracted text
â”‚   â”‚   â””â”€â”€ __init__.py
â”‚   â”‚   â””â”€â”€ chunker.py             # Uses RecursiveCharacterTextSplitter; handles chunk logic
â”‚
â”‚   â”œâ”€â”€ embedding_manager/          # Module: Creates embeddings using transformer models
â”‚   â”‚   â””â”€â”€ __init__.py
â”‚   â”‚   â””â”€â”€ manager.py             # EmbeddingManager using Sentence Transformers
â”‚
â”‚   â”œâ”€â”€ vector_db_manager/          # Module: ChromaDB interactions
â”‚   â”‚   â””â”€â”€ __init__.py
â”‚   â”‚   â””â”€â”€ manager.py             # Stores/retrieves embeddings to/from ChromaDB
â”‚
â”‚   â”œâ”€â”€ llm_manager/                # Module: LLM prompt management and response generation
â”‚   â”‚   â””â”€â”€ __init__.py
â”‚   â”‚   â””â”€â”€ manager.py             # Handles Gemini LLM + Conversation Memory + prompt crafting
â”‚
â”‚   â”œâ”€â”€ data/                       # ðŸ“‚ Raw document files (PDFs, PPTX, CSV, TXT, Images, etc.)
â”‚   â”‚   â””â”€â”€ test.txt               # Sample/test file for ingestion
â”‚
â”‚   â”œâ”€â”€ users.db                    # SQLite DB (optional) for storing user interactions or metadata
â”‚   â””â”€â”€ .env                        # API keys and environment variables (keep this in .gitignore)
â”‚
â”œâ”€â”€ requirements.txt                # List of all Python dependencies
â”œâ”€â”€ README.md                       # Project description, setup guide, usage
â””â”€â”€ .gitignore                      # Ignore .env, __pycache__, and other unnecessary files